
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800100  00000930  000009c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000930  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  008001b2  008001b2  00000a76  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a76  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ad4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b4e  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000788  00000000  00000000  000016c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000445  00000000  00000000  00001e4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  00002290  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000402  00000000  00000000  000023a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000042d  00000000  00000000  000027aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002bd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 ca 00 	jmp	0x194	; 0x194 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e3       	ldi	r30, 0x30	; 48
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 3b       	cpi	r26, 0xB2	; 178
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 eb       	ldi	r26, 0xB2	; 178
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 3b       	cpi	r26, 0xB4	; 180
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 95 01 	call	0x32a	; 0x32a <main>
  9e:	0c 94 96 04 	jmp	0x92c	; 0x92c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <read_adc>:
	TCNT1 = 0; //reset
}

void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize	
  a6:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <__data_end+0x1>
  aa:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <__data_end>
  ae:	24 e0       	ldi	r18, 0x04	; 4
	while (i--) {
		ADCSRA |= (1<<ADSC);
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
  b4:	a8 e7       	ldi	r26, 0x78	; 120
  b6:	b0 e0       	ldi	r27, 0x00	; 0

void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize	
	while (i--) {
		ADCSRA |= (1<<ADSC);
  b8:	80 81       	ld	r24, Z
  ba:	80 64       	ori	r24, 0x40	; 64
  bc:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
  be:	80 81       	ld	r24, Z
  c0:	86 fd       	sbrc	r24, 6
  c2:	fd cf       	rjmp	.-6      	; 0xbe <read_adc+0x18>
		adc_temp+= ADC;
  c4:	8d 91       	ld	r24, X+
  c6:	9c 91       	ld	r25, X
  c8:	11 97       	sbiw	r26, 0x01	; 1
  ca:	40 91 b2 01 	lds	r20, 0x01B2	; 0x8001b2 <__data_end>
  ce:	50 91 b3 01 	lds	r21, 0x01B3	; 0x8001b3 <__data_end+0x1>
  d2:	84 0f       	add	r24, r20
  d4:	95 1f       	adc	r25, r21
  d6:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <__data_end+0x1>
  da:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <__data_end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	3f ef       	ldi	r19, 0xFF	; 255
  e0:	80 e7       	ldi	r24, 0x70	; 112
  e2:	92 e0       	ldi	r25, 0x02	; 2
  e4:	31 50       	subi	r19, 0x01	; 1
  e6:	80 40       	sbci	r24, 0x00	; 0
  e8:	90 40       	sbci	r25, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <read_adc+0x3e>
  ec:	00 c0       	rjmp	.+0      	; 0xee <read_adc+0x48>
  ee:	00 00       	nop
  f0:	21 50       	subi	r18, 0x01	; 1
}

void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize	
	while (i--) {
  f2:	11 f7       	brne	.-60     	; 0xb8 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp /4; //get average
  f4:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
  f8:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
  fc:	99 23       	and	r25, r25
  fe:	0c f4       	brge	.+2      	; 0x102 <read_adc+0x5c>
 100:	03 96       	adiw	r24, 0x03	; 3
 102:	95 95       	asr	r25
 104:	87 95       	ror	r24
 106:	95 95       	asr	r25
 108:	87 95       	ror	r24
 10a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <__data_end+0x1>
 10e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <__data_end>
 112:	08 95       	ret

00000114 <set_timer>:
}

void set_timer(void) {
	TCNT1 = 0; //reset timer1
 114:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 118:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	TIMSK1 |= (1 << TOIE0); //Enable Timer1 Interrupt
 11c:	ef e6       	ldi	r30, 0x6F	; 111
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	81 60       	ori	r24, 0x01	; 1
 124:	80 83       	st	Z, r24
	sei(); //Enable Global Interrupt
 126:	78 94       	sei
	TCCR1B |= (1<<CS12)|(1<<CS10); //prescaler = 1024 
 128:	e1 e8       	ldi	r30, 0x81	; 129
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	85 60       	ori	r24, 0x05	; 5
 130:	80 83       	st	Z, r24
 132:	08 95       	ret

00000134 <USART_init>:
}

void USART_init( void )
{
	UBRR0H = 0; 
 134:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = 8; // BAUD 115200
 138:	88 e0       	ldi	r24, 0x08	; 8
 13a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 13e:	86 e0       	ldi	r24, 0x06	; 6
 140:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0); /* Enable RX and TX */
 144:	88 e1       	ldi	r24, 0x18	; 24
 146:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 14a:	08 95       	ret

0000014c <USART_sendChar>:
}

void USART_sendChar(char ch) {
	//wait until UDR0 is empty
	while (!(UCSR0A & (1<<UDRE0))); 
 14c:	e0 ec       	ldi	r30, 0xC0	; 192
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	90 81       	ld	r25, Z
 152:	95 ff       	sbrs	r25, 5
 154:	fd cf       	rjmp	.-6      	; 0x150 <USART_sendChar+0x4>
	UDR0 = ch; ; //transmit ch
 156:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 15a:	08 95       	ret

0000015c <USART_sendString>:
}

void USART_sendString(char* str) {
 15c:	0f 93       	push	r16
 15e:	1f 93       	push	r17
 160:	cf 93       	push	r28
 162:	df 93       	push	r29
 164:	fc 01       	movw	r30, r24
	while ((*str != '\0')) { 
 166:	80 81       	ld	r24, Z
 168:	88 23       	and	r24, r24
 16a:	79 f0       	breq	.+30     	; 0x18a <USART_sendString+0x2e>
 16c:	8f 01       	movw	r16, r30
 16e:	0f 5f       	subi	r16, 0xFF	; 255
 170:	1f 4f       	sbci	r17, 0xFF	; 255
		while (!(UCSR0A & (1<<UDRE0))); //wait until UDR0 is empty
 172:	c0 ec       	ldi	r28, 0xC0	; 192
 174:	d0 e0       	ldi	r29, 0x00	; 0
 176:	98 81       	ld	r25, Y
 178:	95 ff       	sbrs	r25, 5
 17a:	fd cf       	rjmp	.-6      	; 0x176 <USART_sendString+0x1a>
		USART_sendChar(*str); //transmit ch
 17c:	0e 94 a6 00 	call	0x14c	; 0x14c <USART_sendChar>
	while (!(UCSR0A & (1<<UDRE0))); 
	UDR0 = ch; ; //transmit ch
}

void USART_sendString(char* str) {
	while ((*str != '\0')) { 
 180:	f8 01       	movw	r30, r16
 182:	81 91       	ld	r24, Z+
 184:	8f 01       	movw	r16, r30
 186:	81 11       	cpse	r24, r1
 188:	f6 cf       	rjmp	.-20     	; 0x176 <USART_sendString+0x1a>
		while (!(UCSR0A & (1<<UDRE0))); //wait until UDR0 is empty
		USART_sendChar(*str); //transmit ch
		str++; 
	}
}
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	08 95       	ret

00000194 <__vector_13>:
	while (1) // Loop forever
	{
	}
}

ISR (TIMER1_OVF_vect) {
 194:	1f 92       	push	r1
 196:	0f 92       	push	r0
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	0f 92       	push	r0
 19c:	11 24       	eor	r1, r1
 19e:	0f 93       	push	r16
 1a0:	1f 93       	push	r17
 1a2:	2f 93       	push	r18
 1a4:	3f 93       	push	r19
 1a6:	4f 93       	push	r20
 1a8:	5f 93       	push	r21
 1aa:	6f 93       	push	r22
 1ac:	7f 93       	push	r23
 1ae:	8f 93       	push	r24
 1b0:	9f 93       	push	r25
 1b2:	af 93       	push	r26
 1b4:	bf 93       	push	r27
 1b6:	ef 93       	push	r30
 1b8:	ff 93       	push	r31
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62
 1c2:	e2 97       	sbiw	r28, 0x32	; 50
 1c4:	de bf       	out	0x3e, r29	; 62
 1c6:	cd bf       	out	0x3d, r28	; 61
	read_adc(); //get temp
 1c8:	0e 94 53 00 	call	0xa6	; 0xa6 <read_adc>
	char temp[50]; 
	snprintf(temp,sizeof(temp),"%d\r\n",adc_temp); //read into temp buffer
 1cc:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
 1d0:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
 1d4:	9f 93       	push	r25
 1d6:	8f 93       	push	r24
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	9f 93       	push	r25
 1de:	8f 93       	push	r24
 1e0:	1f 92       	push	r1
 1e2:	82 e3       	ldi	r24, 0x32	; 50
 1e4:	8f 93       	push	r24
 1e6:	8e 01       	movw	r16, r28
 1e8:	0f 5f       	subi	r16, 0xFF	; 255
 1ea:	1f 4f       	sbci	r17, 0xFF	; 255
 1ec:	1f 93       	push	r17
 1ee:	0f 93       	push	r16
 1f0:	0e 94 9e 01 	call	0x33c	; 0x33c <snprintf>
	USART_sendString("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n"); //connect to thingspeak
 1f4:	85 e0       	ldi	r24, 0x05	; 5
 1f6:	91 e0       	ldi	r25, 0x01	; 1
 1f8:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 1fc:	2f ef       	ldi	r18, 0xFF	; 255
 1fe:	8b e7       	ldi	r24, 0x7B	; 123
 200:	92 e9       	ldi	r25, 0x92	; 146
 202:	21 50       	subi	r18, 0x01	; 1
 204:	80 40       	sbci	r24, 0x00	; 0
 206:	90 40       	sbci	r25, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <__vector_13+0x6e>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <__vector_13+0x78>
 20c:	00 00       	nop
	_delay_ms(3000);
	USART_sendString("AT+CIPSEND=50\r\n"); //send 50 characters
 20e:	81 e3       	ldi	r24, 0x31	; 49
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	83 ed       	ldi	r24, 0xD3	; 211
 21a:	90 e3       	ldi	r25, 0x30	; 48
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <__vector_13+0x88>
 224:	00 c0       	rjmp	.+0      	; 0x226 <__vector_13+0x92>
 226:	00 00       	nop
	_delay_ms(1000);
	USART_sendString("GET /update?key=W7PJEYOYV6BGU372&field1="); //channel key
 228:	81 e4       	ldi	r24, 0x41	; 65
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
	USART_sendString(temp); //send temperature 
 230:	c8 01       	movw	r24, r16
 232:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 236:	2f ef       	ldi	r18, 0xFF	; 255
 238:	83 ed       	ldi	r24, 0xD3	; 211
 23a:	90 e3       	ldi	r25, 0x30	; 48
 23c:	21 50       	subi	r18, 0x01	; 1
 23e:	80 40       	sbci	r24, 0x00	; 0
 240:	90 40       	sbci	r25, 0x00	; 0
 242:	e1 f7       	brne	.-8      	; 0x23c <__vector_13+0xa8>
 244:	00 c0       	rjmp	.+0      	; 0x246 <__vector_13+0xb2>
 246:	00 00       	nop
	_delay_ms(1000);
	USART_sendString("AT+CIPCLOSE\r\n"); //end
 248:	8a e6       	ldi	r24, 0x6A	; 106
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 250:	2f ef       	ldi	r18, 0xFF	; 255
 252:	83 ed       	ldi	r24, 0xD3	; 211
 254:	90 e3       	ldi	r25, 0x30	; 48
 256:	21 50       	subi	r18, 0x01	; 1
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	90 40       	sbci	r25, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <__vector_13+0xc2>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <__vector_13+0xcc>
 260:	00 00       	nop
	_delay_ms(1000);
	TCNT1 = 0; //reset
 262:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 266:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
}
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
 274:	e2 96       	adiw	r28, 0x32	; 50
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	f8 94       	cli
 27a:	de bf       	out	0x3e, r29	; 62
 27c:	0f be       	out	0x3f, r0	; 63
 27e:	cd bf       	out	0x3d, r28	; 61
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	ff 91       	pop	r31
 286:	ef 91       	pop	r30
 288:	bf 91       	pop	r27
 28a:	af 91       	pop	r26
 28c:	9f 91       	pop	r25
 28e:	8f 91       	pop	r24
 290:	7f 91       	pop	r23
 292:	6f 91       	pop	r22
 294:	5f 91       	pop	r21
 296:	4f 91       	pop	r20
 298:	3f 91       	pop	r19
 29a:	2f 91       	pop	r18
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	0f 90       	pop	r0
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	0f 90       	pop	r0
 2a6:	1f 90       	pop	r1
 2a8:	18 95       	reti

000002aa <adc_init>:
		str++; 
	}
}

void adc_init(void) {
	ADMUX |= (0<<REFS1)| // Reference Select
 2aa:	ec e7       	ldi	r30, 0x7C	; 124
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	85 64       	ori	r24, 0x45	; 69
 2b2:	80 83       	st	Z, r24
	(1<<REFS0)| // Selected AVcc
	(0<<ADLAR)| // Left Adjust Result OFF
	(1<<MUX2) | // Analog Channel Select
	(0<<MUX1) | // 1 0 1
	(1<<MUX0) ; // Channel 5 or PC5
	ADCSRA |= (1<<ADEN)| // Enable ADC
 2b4:	ea e7       	ldi	r30, 0x7A	; 122
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	80 81       	ld	r24, Z
 2ba:	85 68       	ori	r24, 0x85	; 133
 2bc:	80 83       	st	Z, r24
 2be:	08 95       	ret

000002c0 <AT_init>:
	(0<<ADPS1)| // Set to
	(1<<ADPS0); // 32
}

void AT_init(void) {
	USART_sendString("AT\r\n"); // Sends AT, expect OK
 2c0:	88 e7       	ldi	r24, 0x78	; 120
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 2c8:	2f ef       	ldi	r18, 0xFF	; 255
 2ca:	83 ed       	ldi	r24, 0xD3	; 211
 2cc:	90 e3       	ldi	r25, 0x30	; 48
 2ce:	21 50       	subi	r18, 0x01	; 1
 2d0:	80 40       	sbci	r24, 0x00	; 0
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <AT_init+0xe>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <AT_init+0x18>
 2d8:	00 00       	nop
	_delay_ms(1000);
	USART_sendString("AT+CWMODE=1\r\n"); // Sends mode set to station, expect OK
 2da:	8d e7       	ldi	r24, 0x7D	; 125
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 2e2:	2f ef       	ldi	r18, 0xFF	; 255
 2e4:	83 ed       	ldi	r24, 0xD3	; 211
 2e6:	90 e3       	ldi	r25, 0x30	; 48
 2e8:	21 50       	subi	r18, 0x01	; 1
 2ea:	80 40       	sbci	r24, 0x00	; 0
 2ec:	90 40       	sbci	r25, 0x00	; 0
 2ee:	e1 f7       	brne	.-8      	; 0x2e8 <AT_init+0x28>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <AT_init+0x32>
 2f2:	00 00       	nop
	_delay_ms(1000);
	USART_sendString("AT+CWLAP\r\n"); // Send command to list Wifi networks, expect list
 2f4:	8b e8       	ldi	r24, 0x8B	; 139
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 2fc:	2f ef       	ldi	r18, 0xFF	; 255
 2fe:	8f e4       	ldi	r24, 0x4F	; 79
 300:	93 ec       	ldi	r25, 0xC3	; 195
 302:	21 50       	subi	r18, 0x01	; 1
 304:	80 40       	sbci	r24, 0x00	; 0
 306:	90 40       	sbci	r25, 0x00	; 0
 308:	e1 f7       	brne	.-8      	; 0x302 <AT_init+0x42>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <AT_init+0x4c>
 30c:	00 00       	nop
	_delay_ms(4000);
	USART_sendString("AT+CWJAP=\"Yun\",\"st980204\"\r\n"); // Send command to  join guest wifi, expect OK
 30e:	86 e9       	ldi	r24, 0x96	; 150
 310:	91 e0       	ldi	r25, 0x01	; 1
 312:	0e 94 ae 00 	call	0x15c	; 0x15c <USART_sendString>
 316:	2f ef       	ldi	r18, 0xFF	; 255
 318:	8b e7       	ldi	r24, 0x7B	; 123
 31a:	92 e9       	ldi	r25, 0x92	; 146
 31c:	21 50       	subi	r18, 0x01	; 1
 31e:	80 40       	sbci	r24, 0x00	; 0
 320:	90 40       	sbci	r25, 0x00	; 0
 322:	e1 f7       	brne	.-8      	; 0x31c <AT_init+0x5c>
 324:	00 c0       	rjmp	.+0      	; 0x326 <AT_init+0x66>
 326:	00 00       	nop
 328:	08 95       	ret

0000032a <main>:

volatile int adc_temp;

int main(void)
{
	USART_init(); // initialize USART
 32a:	0e 94 9a 00 	call	0x134	; 0x134 <USART_init>
	AT_init(); // initialize AT setttings
 32e:	0e 94 60 01 	call	0x2c0	; 0x2c0 <AT_init>
	set_timer(); // initialize Timer/Interrupt
 332:	0e 94 8a 00 	call	0x114	; 0x114 <set_timer>
	adc_init();  // initialize ADC
 336:	0e 94 55 01 	call	0x2aa	; 0x2aa <adc_init>
 33a:	ff cf       	rjmp	.-2      	; 0x33a <main+0x10>

0000033c <snprintf>:
 33c:	ae e0       	ldi	r26, 0x0E	; 14
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e4 ea       	ldi	r30, 0xA4	; 164
 342:	f1 e0       	ldi	r31, 0x01	; 1
 344:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__prologue_saves__+0x1c>
 348:	0d 89       	ldd	r16, Y+21	; 0x15
 34a:	1e 89       	ldd	r17, Y+22	; 0x16
 34c:	8f 89       	ldd	r24, Y+23	; 0x17
 34e:	98 8d       	ldd	r25, Y+24	; 0x18
 350:	26 e0       	ldi	r18, 0x06	; 6
 352:	2c 83       	std	Y+4, r18	; 0x04
 354:	1a 83       	std	Y+2, r17	; 0x02
 356:	09 83       	std	Y+1, r16	; 0x01
 358:	97 ff       	sbrs	r25, 7
 35a:	02 c0       	rjmp	.+4      	; 0x360 <snprintf+0x24>
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	90 e8       	ldi	r25, 0x80	; 128
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	9e 83       	std	Y+6, r25	; 0x06
 364:	8d 83       	std	Y+5, r24	; 0x05
 366:	ae 01       	movw	r20, r28
 368:	45 5e       	subi	r20, 0xE5	; 229
 36a:	5f 4f       	sbci	r21, 0xFF	; 255
 36c:	69 8d       	ldd	r22, Y+25	; 0x19
 36e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 370:	ce 01       	movw	r24, r28
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	0e 94 ce 01 	call	0x39c	; 0x39c <vfprintf>
 378:	4d 81       	ldd	r20, Y+5	; 0x05
 37a:	5e 81       	ldd	r21, Y+6	; 0x06
 37c:	57 fd       	sbrc	r21, 7
 37e:	0a c0       	rjmp	.+20     	; 0x394 <snprintf+0x58>
 380:	2f 81       	ldd	r18, Y+7	; 0x07
 382:	38 85       	ldd	r19, Y+8	; 0x08
 384:	42 17       	cp	r20, r18
 386:	53 07       	cpc	r21, r19
 388:	0c f4       	brge	.+2      	; 0x38c <snprintf+0x50>
 38a:	9a 01       	movw	r18, r20
 38c:	f8 01       	movw	r30, r16
 38e:	e2 0f       	add	r30, r18
 390:	f3 1f       	adc	r31, r19
 392:	10 82       	st	Z, r1
 394:	2e 96       	adiw	r28, 0x0e	; 14
 396:	e4 e0       	ldi	r30, 0x04	; 4
 398:	0c 94 89 04 	jmp	0x912	; 0x912 <__stack+0x13>

0000039c <vfprintf>:
 39c:	ab e0       	ldi	r26, 0x0B	; 11
 39e:	b0 e0       	ldi	r27, 0x00	; 0
 3a0:	e4 ed       	ldi	r30, 0xD4	; 212
 3a2:	f1 e0       	ldi	r31, 0x01	; 1
 3a4:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__prologue_saves__>
 3a8:	6c 01       	movw	r12, r24
 3aa:	7b 01       	movw	r14, r22
 3ac:	8a 01       	movw	r16, r20
 3ae:	fc 01       	movw	r30, r24
 3b0:	17 82       	std	Z+7, r1	; 0x07
 3b2:	16 82       	std	Z+6, r1	; 0x06
 3b4:	83 81       	ldd	r24, Z+3	; 0x03
 3b6:	81 ff       	sbrs	r24, 1
 3b8:	cc c1       	rjmp	.+920    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 3ba:	ce 01       	movw	r24, r28
 3bc:	01 96       	adiw	r24, 0x01	; 1
 3be:	3c 01       	movw	r6, r24
 3c0:	f6 01       	movw	r30, r12
 3c2:	93 81       	ldd	r25, Z+3	; 0x03
 3c4:	f7 01       	movw	r30, r14
 3c6:	93 fd       	sbrc	r25, 3
 3c8:	85 91       	lpm	r24, Z+
 3ca:	93 ff       	sbrs	r25, 3
 3cc:	81 91       	ld	r24, Z+
 3ce:	7f 01       	movw	r14, r30
 3d0:	88 23       	and	r24, r24
 3d2:	09 f4       	brne	.+2      	; 0x3d6 <vfprintf+0x3a>
 3d4:	ba c1       	rjmp	.+884    	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 3d6:	85 32       	cpi	r24, 0x25	; 37
 3d8:	39 f4       	brne	.+14     	; 0x3e8 <vfprintf+0x4c>
 3da:	93 fd       	sbrc	r25, 3
 3dc:	85 91       	lpm	r24, Z+
 3de:	93 ff       	sbrs	r25, 3
 3e0:	81 91       	ld	r24, Z+
 3e2:	7f 01       	movw	r14, r30
 3e4:	85 32       	cpi	r24, 0x25	; 37
 3e6:	29 f4       	brne	.+10     	; 0x3f2 <vfprintf+0x56>
 3e8:	b6 01       	movw	r22, r12
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 3f0:	e7 cf       	rjmp	.-50     	; 0x3c0 <vfprintf+0x24>
 3f2:	91 2c       	mov	r9, r1
 3f4:	21 2c       	mov	r2, r1
 3f6:	31 2c       	mov	r3, r1
 3f8:	ff e1       	ldi	r31, 0x1F	; 31
 3fa:	f3 15       	cp	r31, r3
 3fc:	d8 f0       	brcs	.+54     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3fe:	8b 32       	cpi	r24, 0x2B	; 43
 400:	79 f0       	breq	.+30     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 402:	38 f4       	brcc	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	80 32       	cpi	r24, 0x20	; 32
 406:	79 f0       	breq	.+30     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 408:	83 32       	cpi	r24, 0x23	; 35
 40a:	a1 f4       	brne	.+40     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 40c:	23 2d       	mov	r18, r3
 40e:	20 61       	ori	r18, 0x10	; 16
 410:	1d c0       	rjmp	.+58     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 412:	8d 32       	cpi	r24, 0x2D	; 45
 414:	61 f0       	breq	.+24     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 416:	80 33       	cpi	r24, 0x30	; 48
 418:	69 f4       	brne	.+26     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 41a:	23 2d       	mov	r18, r3
 41c:	21 60       	ori	r18, 0x01	; 1
 41e:	16 c0       	rjmp	.+44     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 420:	83 2d       	mov	r24, r3
 422:	82 60       	ori	r24, 0x02	; 2
 424:	38 2e       	mov	r3, r24
 426:	e3 2d       	mov	r30, r3
 428:	e4 60       	ori	r30, 0x04	; 4
 42a:	3e 2e       	mov	r3, r30
 42c:	2a c0       	rjmp	.+84     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 42e:	f3 2d       	mov	r31, r3
 430:	f8 60       	ori	r31, 0x08	; 8
 432:	1d c0       	rjmp	.+58     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 434:	37 fc       	sbrc	r3, 7
 436:	2d c0       	rjmp	.+90     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 438:	20 ed       	ldi	r18, 0xD0	; 208
 43a:	28 0f       	add	r18, r24
 43c:	2a 30       	cpi	r18, 0x0A	; 10
 43e:	40 f0       	brcs	.+16     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 440:	8e 32       	cpi	r24, 0x2E	; 46
 442:	b9 f4       	brne	.+46     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 444:	36 fc       	sbrc	r3, 6
 446:	81 c1       	rjmp	.+770    	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 448:	23 2d       	mov	r18, r3
 44a:	20 64       	ori	r18, 0x40	; 64
 44c:	32 2e       	mov	r3, r18
 44e:	19 c0       	rjmp	.+50     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 450:	36 fe       	sbrs	r3, 6
 452:	06 c0       	rjmp	.+12     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 454:	8a e0       	ldi	r24, 0x0A	; 10
 456:	98 9e       	mul	r9, r24
 458:	20 0d       	add	r18, r0
 45a:	11 24       	eor	r1, r1
 45c:	92 2e       	mov	r9, r18
 45e:	11 c0       	rjmp	.+34     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 460:	ea e0       	ldi	r30, 0x0A	; 10
 462:	2e 9e       	mul	r2, r30
 464:	20 0d       	add	r18, r0
 466:	11 24       	eor	r1, r1
 468:	22 2e       	mov	r2, r18
 46a:	f3 2d       	mov	r31, r3
 46c:	f0 62       	ori	r31, 0x20	; 32
 46e:	3f 2e       	mov	r3, r31
 470:	08 c0       	rjmp	.+16     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 472:	8c 36       	cpi	r24, 0x6C	; 108
 474:	21 f4       	brne	.+8      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 476:	83 2d       	mov	r24, r3
 478:	80 68       	ori	r24, 0x80	; 128
 47a:	38 2e       	mov	r3, r24
 47c:	02 c0       	rjmp	.+4      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 47e:	88 36       	cpi	r24, 0x68	; 104
 480:	41 f4       	brne	.+16     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 482:	f7 01       	movw	r30, r14
 484:	93 fd       	sbrc	r25, 3
 486:	85 91       	lpm	r24, Z+
 488:	93 ff       	sbrs	r25, 3
 48a:	81 91       	ld	r24, Z+
 48c:	7f 01       	movw	r14, r30
 48e:	81 11       	cpse	r24, r1
 490:	b3 cf       	rjmp	.-154    	; 0x3f8 <vfprintf+0x5c>
 492:	98 2f       	mov	r25, r24
 494:	9f 7d       	andi	r25, 0xDF	; 223
 496:	95 54       	subi	r25, 0x45	; 69
 498:	93 30       	cpi	r25, 0x03	; 3
 49a:	28 f4       	brcc	.+10     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 49c:	0c 5f       	subi	r16, 0xFC	; 252
 49e:	1f 4f       	sbci	r17, 0xFF	; 255
 4a0:	9f e3       	ldi	r25, 0x3F	; 63
 4a2:	99 83       	std	Y+1, r25	; 0x01
 4a4:	0d c0       	rjmp	.+26     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4a6:	83 36       	cpi	r24, 0x63	; 99
 4a8:	31 f0       	breq	.+12     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4aa:	83 37       	cpi	r24, 0x73	; 115
 4ac:	71 f0       	breq	.+28     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ae:	83 35       	cpi	r24, 0x53	; 83
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4b2:	59 c0       	rjmp	.+178    	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 4b4:	21 c0       	rjmp	.+66     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4b6:	f8 01       	movw	r30, r16
 4b8:	80 81       	ld	r24, Z
 4ba:	89 83       	std	Y+1, r24	; 0x01
 4bc:	0e 5f       	subi	r16, 0xFE	; 254
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	88 24       	eor	r8, r8
 4c2:	83 94       	inc	r8
 4c4:	91 2c       	mov	r9, r1
 4c6:	53 01       	movw	r10, r6
 4c8:	13 c0       	rjmp	.+38     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ca:	28 01       	movw	r4, r16
 4cc:	f2 e0       	ldi	r31, 0x02	; 2
 4ce:	4f 0e       	add	r4, r31
 4d0:	51 1c       	adc	r5, r1
 4d2:	f8 01       	movw	r30, r16
 4d4:	a0 80       	ld	r10, Z
 4d6:	b1 80       	ldd	r11, Z+1	; 0x01
 4d8:	36 fe       	sbrs	r3, 6
 4da:	03 c0       	rjmp	.+6      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4dc:	69 2d       	mov	r22, r9
 4de:	70 e0       	ldi	r23, 0x00	; 0
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e2:	6f ef       	ldi	r22, 0xFF	; 255
 4e4:	7f ef       	ldi	r23, 0xFF	; 255
 4e6:	c5 01       	movw	r24, r10
 4e8:	0e 94 ba 03 	call	0x774	; 0x774 <strnlen>
 4ec:	4c 01       	movw	r8, r24
 4ee:	82 01       	movw	r16, r4
 4f0:	f3 2d       	mov	r31, r3
 4f2:	ff 77       	andi	r31, 0x7F	; 127
 4f4:	3f 2e       	mov	r3, r31
 4f6:	16 c0       	rjmp	.+44     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 4f8:	28 01       	movw	r4, r16
 4fa:	22 e0       	ldi	r18, 0x02	; 2
 4fc:	42 0e       	add	r4, r18
 4fe:	51 1c       	adc	r5, r1
 500:	f8 01       	movw	r30, r16
 502:	a0 80       	ld	r10, Z
 504:	b1 80       	ldd	r11, Z+1	; 0x01
 506:	36 fe       	sbrs	r3, 6
 508:	03 c0       	rjmp	.+6      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50a:	69 2d       	mov	r22, r9
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 510:	6f ef       	ldi	r22, 0xFF	; 255
 512:	7f ef       	ldi	r23, 0xFF	; 255
 514:	c5 01       	movw	r24, r10
 516:	0e 94 af 03 	call	0x75e	; 0x75e <strnlen_P>
 51a:	4c 01       	movw	r8, r24
 51c:	f3 2d       	mov	r31, r3
 51e:	f0 68       	ori	r31, 0x80	; 128
 520:	3f 2e       	mov	r3, r31
 522:	82 01       	movw	r16, r4
 524:	33 fc       	sbrc	r3, 3
 526:	1b c0       	rjmp	.+54     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 528:	82 2d       	mov	r24, r2
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	88 16       	cp	r8, r24
 52e:	99 06       	cpc	r9, r25
 530:	b0 f4       	brcc	.+44     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 532:	b6 01       	movw	r22, r12
 534:	80 e2       	ldi	r24, 0x20	; 32
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 53c:	2a 94       	dec	r2
 53e:	f4 cf       	rjmp	.-24     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 540:	f5 01       	movw	r30, r10
 542:	37 fc       	sbrc	r3, 7
 544:	85 91       	lpm	r24, Z+
 546:	37 fe       	sbrs	r3, 7
 548:	81 91       	ld	r24, Z+
 54a:	5f 01       	movw	r10, r30
 54c:	b6 01       	movw	r22, r12
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 554:	21 10       	cpse	r2, r1
 556:	2a 94       	dec	r2
 558:	21 e0       	ldi	r18, 0x01	; 1
 55a:	82 1a       	sub	r8, r18
 55c:	91 08       	sbc	r9, r1
 55e:	81 14       	cp	r8, r1
 560:	91 04       	cpc	r9, r1
 562:	71 f7       	brne	.-36     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 564:	e8 c0       	rjmp	.+464    	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 566:	84 36       	cpi	r24, 0x64	; 100
 568:	11 f0       	breq	.+4      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56a:	89 36       	cpi	r24, 0x69	; 105
 56c:	41 f5       	brne	.+80     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 56e:	f8 01       	movw	r30, r16
 570:	37 fe       	sbrs	r3, 7
 572:	07 c0       	rjmp	.+14     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 574:	60 81       	ld	r22, Z
 576:	71 81       	ldd	r23, Z+1	; 0x01
 578:	82 81       	ldd	r24, Z+2	; 0x02
 57a:	93 81       	ldd	r25, Z+3	; 0x03
 57c:	0c 5f       	subi	r16, 0xFC	; 252
 57e:	1f 4f       	sbci	r17, 0xFF	; 255
 580:	08 c0       	rjmp	.+16     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 582:	60 81       	ld	r22, Z
 584:	71 81       	ldd	r23, Z+1	; 0x01
 586:	07 2e       	mov	r0, r23
 588:	00 0c       	add	r0, r0
 58a:	88 0b       	sbc	r24, r24
 58c:	99 0b       	sbc	r25, r25
 58e:	0e 5f       	subi	r16, 0xFE	; 254
 590:	1f 4f       	sbci	r17, 0xFF	; 255
 592:	f3 2d       	mov	r31, r3
 594:	ff 76       	andi	r31, 0x6F	; 111
 596:	3f 2e       	mov	r3, r31
 598:	97 ff       	sbrs	r25, 7
 59a:	09 c0       	rjmp	.+18     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 59c:	90 95       	com	r25
 59e:	80 95       	com	r24
 5a0:	70 95       	com	r23
 5a2:	61 95       	neg	r22
 5a4:	7f 4f       	sbci	r23, 0xFF	; 255
 5a6:	8f 4f       	sbci	r24, 0xFF	; 255
 5a8:	9f 4f       	sbci	r25, 0xFF	; 255
 5aa:	f0 68       	ori	r31, 0x80	; 128
 5ac:	3f 2e       	mov	r3, r31
 5ae:	2a e0       	ldi	r18, 0x0A	; 10
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	a3 01       	movw	r20, r6
 5b4:	0e 94 01 04 	call	0x802	; 0x802 <__ultoa_invert>
 5b8:	88 2e       	mov	r8, r24
 5ba:	86 18       	sub	r8, r6
 5bc:	45 c0       	rjmp	.+138    	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 5be:	85 37       	cpi	r24, 0x75	; 117
 5c0:	31 f4       	brne	.+12     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5c2:	23 2d       	mov	r18, r3
 5c4:	2f 7e       	andi	r18, 0xEF	; 239
 5c6:	b2 2e       	mov	r11, r18
 5c8:	2a e0       	ldi	r18, 0x0A	; 10
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	25 c0       	rjmp	.+74     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5ce:	93 2d       	mov	r25, r3
 5d0:	99 7f       	andi	r25, 0xF9	; 249
 5d2:	b9 2e       	mov	r11, r25
 5d4:	8f 36       	cpi	r24, 0x6F	; 111
 5d6:	c1 f0       	breq	.+48     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5d8:	18 f4       	brcc	.+6      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5da:	88 35       	cpi	r24, 0x58	; 88
 5dc:	79 f0       	breq	.+30     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5de:	b5 c0       	rjmp	.+362    	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 5e0:	80 37       	cpi	r24, 0x70	; 112
 5e2:	19 f0       	breq	.+6      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e4:	88 37       	cpi	r24, 0x78	; 120
 5e6:	21 f0       	breq	.+8      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e8:	b0 c0       	rjmp	.+352    	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 5ea:	e9 2f       	mov	r30, r25
 5ec:	e0 61       	ori	r30, 0x10	; 16
 5ee:	be 2e       	mov	r11, r30
 5f0:	b4 fe       	sbrs	r11, 4
 5f2:	0d c0       	rjmp	.+26     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5f4:	fb 2d       	mov	r31, r11
 5f6:	f4 60       	ori	r31, 0x04	; 4
 5f8:	bf 2e       	mov	r11, r31
 5fa:	09 c0       	rjmp	.+18     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5fc:	34 fe       	sbrs	r3, 4
 5fe:	0a c0       	rjmp	.+20     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 600:	29 2f       	mov	r18, r25
 602:	26 60       	ori	r18, 0x06	; 6
 604:	b2 2e       	mov	r11, r18
 606:	06 c0       	rjmp	.+12     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 608:	28 e0       	ldi	r18, 0x08	; 8
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	05 c0       	rjmp	.+10     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60e:	20 e1       	ldi	r18, 0x10	; 16
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	02 c0       	rjmp	.+4      	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 614:	20 e1       	ldi	r18, 0x10	; 16
 616:	32 e0       	ldi	r19, 0x02	; 2
 618:	f8 01       	movw	r30, r16
 61a:	b7 fe       	sbrs	r11, 7
 61c:	07 c0       	rjmp	.+14     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 61e:	60 81       	ld	r22, Z
 620:	71 81       	ldd	r23, Z+1	; 0x01
 622:	82 81       	ldd	r24, Z+2	; 0x02
 624:	93 81       	ldd	r25, Z+3	; 0x03
 626:	0c 5f       	subi	r16, 0xFC	; 252
 628:	1f 4f       	sbci	r17, 0xFF	; 255
 62a:	06 c0       	rjmp	.+12     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 62c:	60 81       	ld	r22, Z
 62e:	71 81       	ldd	r23, Z+1	; 0x01
 630:	80 e0       	ldi	r24, 0x00	; 0
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	0e 5f       	subi	r16, 0xFE	; 254
 636:	1f 4f       	sbci	r17, 0xFF	; 255
 638:	a3 01       	movw	r20, r6
 63a:	0e 94 01 04 	call	0x802	; 0x802 <__ultoa_invert>
 63e:	88 2e       	mov	r8, r24
 640:	86 18       	sub	r8, r6
 642:	fb 2d       	mov	r31, r11
 644:	ff 77       	andi	r31, 0x7F	; 127
 646:	3f 2e       	mov	r3, r31
 648:	36 fe       	sbrs	r3, 6
 64a:	0d c0       	rjmp	.+26     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 64c:	23 2d       	mov	r18, r3
 64e:	2e 7f       	andi	r18, 0xFE	; 254
 650:	a2 2e       	mov	r10, r18
 652:	89 14       	cp	r8, r9
 654:	58 f4       	brcc	.+22     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 656:	34 fe       	sbrs	r3, 4
 658:	0b c0       	rjmp	.+22     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 65a:	32 fc       	sbrc	r3, 2
 65c:	09 c0       	rjmp	.+18     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 65e:	83 2d       	mov	r24, r3
 660:	8e 7e       	andi	r24, 0xEE	; 238
 662:	a8 2e       	mov	r10, r24
 664:	05 c0       	rjmp	.+10     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 666:	b8 2c       	mov	r11, r8
 668:	a3 2c       	mov	r10, r3
 66a:	03 c0       	rjmp	.+6      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 66c:	b8 2c       	mov	r11, r8
 66e:	01 c0       	rjmp	.+2      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 670:	b9 2c       	mov	r11, r9
 672:	a4 fe       	sbrs	r10, 4
 674:	0f c0       	rjmp	.+30     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 676:	fe 01       	movw	r30, r28
 678:	e8 0d       	add	r30, r8
 67a:	f1 1d       	adc	r31, r1
 67c:	80 81       	ld	r24, Z
 67e:	80 33       	cpi	r24, 0x30	; 48
 680:	21 f4       	brne	.+8      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 682:	9a 2d       	mov	r25, r10
 684:	99 7e       	andi	r25, 0xE9	; 233
 686:	a9 2e       	mov	r10, r25
 688:	09 c0       	rjmp	.+18     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 68a:	a2 fe       	sbrs	r10, 2
 68c:	06 c0       	rjmp	.+12     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 68e:	b3 94       	inc	r11
 690:	b3 94       	inc	r11
 692:	04 c0       	rjmp	.+8      	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 694:	8a 2d       	mov	r24, r10
 696:	86 78       	andi	r24, 0x86	; 134
 698:	09 f0       	breq	.+2      	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 69a:	b3 94       	inc	r11
 69c:	a3 fc       	sbrc	r10, 3
 69e:	11 c0       	rjmp	.+34     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6a0:	a0 fe       	sbrs	r10, 0
 6a2:	06 c0       	rjmp	.+12     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6a4:	b2 14       	cp	r11, r2
 6a6:	88 f4       	brcc	.+34     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6a8:	28 0c       	add	r2, r8
 6aa:	92 2c       	mov	r9, r2
 6ac:	9b 18       	sub	r9, r11
 6ae:	0e c0       	rjmp	.+28     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6b0:	b2 14       	cp	r11, r2
 6b2:	60 f4       	brcc	.+24     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6b4:	b6 01       	movw	r22, r12
 6b6:	80 e2       	ldi	r24, 0x20	; 32
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 6be:	b3 94       	inc	r11
 6c0:	f7 cf       	rjmp	.-18     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6c2:	b2 14       	cp	r11, r2
 6c4:	18 f4       	brcc	.+6      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6c6:	2b 18       	sub	r2, r11
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6ca:	98 2c       	mov	r9, r8
 6cc:	21 2c       	mov	r2, r1
 6ce:	a4 fe       	sbrs	r10, 4
 6d0:	10 c0       	rjmp	.+32     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6d2:	b6 01       	movw	r22, r12
 6d4:	80 e3       	ldi	r24, 0x30	; 48
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 6dc:	a2 fe       	sbrs	r10, 2
 6de:	17 c0       	rjmp	.+46     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 6e0:	a1 fc       	sbrc	r10, 1
 6e2:	03 c0       	rjmp	.+6      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e4:	88 e7       	ldi	r24, 0x78	; 120
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ea:	88 e5       	ldi	r24, 0x58	; 88
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	b6 01       	movw	r22, r12
 6f0:	0c c0       	rjmp	.+24     	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 6f2:	8a 2d       	mov	r24, r10
 6f4:	86 78       	andi	r24, 0x86	; 134
 6f6:	59 f0       	breq	.+22     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 6f8:	a1 fe       	sbrs	r10, 1
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6fc:	8b e2       	ldi	r24, 0x2B	; 43
 6fe:	01 c0       	rjmp	.+2      	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 700:	80 e2       	ldi	r24, 0x20	; 32
 702:	a7 fc       	sbrc	r10, 7
 704:	8d e2       	ldi	r24, 0x2D	; 45
 706:	b6 01       	movw	r22, r12
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 70e:	89 14       	cp	r8, r9
 710:	38 f4       	brcc	.+14     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 712:	b6 01       	movw	r22, r12
 714:	80 e3       	ldi	r24, 0x30	; 48
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 71c:	9a 94       	dec	r9
 71e:	f7 cf       	rjmp	.-18     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 720:	8a 94       	dec	r8
 722:	f3 01       	movw	r30, r6
 724:	e8 0d       	add	r30, r8
 726:	f1 1d       	adc	r31, r1
 728:	80 81       	ld	r24, Z
 72a:	b6 01       	movw	r22, r12
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 732:	81 10       	cpse	r8, r1
 734:	f5 cf       	rjmp	.-22     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 736:	22 20       	and	r2, r2
 738:	09 f4       	brne	.+2      	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 73a:	42 ce       	rjmp	.-892    	; 0x3c0 <vfprintf+0x24>
 73c:	b6 01       	movw	r22, r12
 73e:	80 e2       	ldi	r24, 0x20	; 32
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	0e 94 c5 03 	call	0x78a	; 0x78a <fputc>
 746:	2a 94       	dec	r2
 748:	f6 cf       	rjmp	.-20     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 74a:	f6 01       	movw	r30, r12
 74c:	86 81       	ldd	r24, Z+6	; 0x06
 74e:	97 81       	ldd	r25, Z+7	; 0x07
 750:	02 c0       	rjmp	.+4      	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 752:	8f ef       	ldi	r24, 0xFF	; 255
 754:	9f ef       	ldi	r25, 0xFF	; 255
 756:	2b 96       	adiw	r28, 0x0b	; 11
 758:	e2 e1       	ldi	r30, 0x12	; 18
 75a:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__epilogue_restores__>

0000075e <strnlen_P>:
 75e:	fc 01       	movw	r30, r24
 760:	05 90       	lpm	r0, Z+
 762:	61 50       	subi	r22, 0x01	; 1
 764:	70 40       	sbci	r23, 0x00	; 0
 766:	01 10       	cpse	r0, r1
 768:	d8 f7       	brcc	.-10     	; 0x760 <strnlen_P+0x2>
 76a:	80 95       	com	r24
 76c:	90 95       	com	r25
 76e:	8e 0f       	add	r24, r30
 770:	9f 1f       	adc	r25, r31
 772:	08 95       	ret

00000774 <strnlen>:
 774:	fc 01       	movw	r30, r24
 776:	61 50       	subi	r22, 0x01	; 1
 778:	70 40       	sbci	r23, 0x00	; 0
 77a:	01 90       	ld	r0, Z+
 77c:	01 10       	cpse	r0, r1
 77e:	d8 f7       	brcc	.-10     	; 0x776 <strnlen+0x2>
 780:	80 95       	com	r24
 782:	90 95       	com	r25
 784:	8e 0f       	add	r24, r30
 786:	9f 1f       	adc	r25, r31
 788:	08 95       	ret

0000078a <fputc>:
 78a:	0f 93       	push	r16
 78c:	1f 93       	push	r17
 78e:	cf 93       	push	r28
 790:	df 93       	push	r29
 792:	fb 01       	movw	r30, r22
 794:	23 81       	ldd	r18, Z+3	; 0x03
 796:	21 fd       	sbrc	r18, 1
 798:	03 c0       	rjmp	.+6      	; 0x7a0 <fputc+0x16>
 79a:	8f ef       	ldi	r24, 0xFF	; 255
 79c:	9f ef       	ldi	r25, 0xFF	; 255
 79e:	2c c0       	rjmp	.+88     	; 0x7f8 <fputc+0x6e>
 7a0:	22 ff       	sbrs	r18, 2
 7a2:	16 c0       	rjmp	.+44     	; 0x7d0 <fputc+0x46>
 7a4:	46 81       	ldd	r20, Z+6	; 0x06
 7a6:	57 81       	ldd	r21, Z+7	; 0x07
 7a8:	24 81       	ldd	r18, Z+4	; 0x04
 7aa:	35 81       	ldd	r19, Z+5	; 0x05
 7ac:	42 17       	cp	r20, r18
 7ae:	53 07       	cpc	r21, r19
 7b0:	44 f4       	brge	.+16     	; 0x7c2 <fputc+0x38>
 7b2:	a0 81       	ld	r26, Z
 7b4:	b1 81       	ldd	r27, Z+1	; 0x01
 7b6:	9d 01       	movw	r18, r26
 7b8:	2f 5f       	subi	r18, 0xFF	; 255
 7ba:	3f 4f       	sbci	r19, 0xFF	; 255
 7bc:	31 83       	std	Z+1, r19	; 0x01
 7be:	20 83       	st	Z, r18
 7c0:	8c 93       	st	X, r24
 7c2:	26 81       	ldd	r18, Z+6	; 0x06
 7c4:	37 81       	ldd	r19, Z+7	; 0x07
 7c6:	2f 5f       	subi	r18, 0xFF	; 255
 7c8:	3f 4f       	sbci	r19, 0xFF	; 255
 7ca:	37 83       	std	Z+7, r19	; 0x07
 7cc:	26 83       	std	Z+6, r18	; 0x06
 7ce:	14 c0       	rjmp	.+40     	; 0x7f8 <fputc+0x6e>
 7d0:	8b 01       	movw	r16, r22
 7d2:	ec 01       	movw	r28, r24
 7d4:	fb 01       	movw	r30, r22
 7d6:	00 84       	ldd	r0, Z+8	; 0x08
 7d8:	f1 85       	ldd	r31, Z+9	; 0x09
 7da:	e0 2d       	mov	r30, r0
 7dc:	09 95       	icall
 7de:	89 2b       	or	r24, r25
 7e0:	e1 f6       	brne	.-72     	; 0x79a <fputc+0x10>
 7e2:	d8 01       	movw	r26, r16
 7e4:	16 96       	adiw	r26, 0x06	; 6
 7e6:	8d 91       	ld	r24, X+
 7e8:	9c 91       	ld	r25, X
 7ea:	17 97       	sbiw	r26, 0x07	; 7
 7ec:	01 96       	adiw	r24, 0x01	; 1
 7ee:	17 96       	adiw	r26, 0x07	; 7
 7f0:	9c 93       	st	X, r25
 7f2:	8e 93       	st	-X, r24
 7f4:	16 97       	sbiw	r26, 0x06	; 6
 7f6:	ce 01       	movw	r24, r28
 7f8:	df 91       	pop	r29
 7fa:	cf 91       	pop	r28
 7fc:	1f 91       	pop	r17
 7fe:	0f 91       	pop	r16
 800:	08 95       	ret

00000802 <__ultoa_invert>:
 802:	fa 01       	movw	r30, r20
 804:	aa 27       	eor	r26, r26
 806:	28 30       	cpi	r18, 0x08	; 8
 808:	51 f1       	breq	.+84     	; 0x85e <__ultoa_invert+0x5c>
 80a:	20 31       	cpi	r18, 0x10	; 16
 80c:	81 f1       	breq	.+96     	; 0x86e <__ultoa_invert+0x6c>
 80e:	e8 94       	clt
 810:	6f 93       	push	r22
 812:	6e 7f       	andi	r22, 0xFE	; 254
 814:	6e 5f       	subi	r22, 0xFE	; 254
 816:	7f 4f       	sbci	r23, 0xFF	; 255
 818:	8f 4f       	sbci	r24, 0xFF	; 255
 81a:	9f 4f       	sbci	r25, 0xFF	; 255
 81c:	af 4f       	sbci	r26, 0xFF	; 255
 81e:	b1 e0       	ldi	r27, 0x01	; 1
 820:	3e d0       	rcall	.+124    	; 0x89e <__ultoa_invert+0x9c>
 822:	b4 e0       	ldi	r27, 0x04	; 4
 824:	3c d0       	rcall	.+120    	; 0x89e <__ultoa_invert+0x9c>
 826:	67 0f       	add	r22, r23
 828:	78 1f       	adc	r23, r24
 82a:	89 1f       	adc	r24, r25
 82c:	9a 1f       	adc	r25, r26
 82e:	a1 1d       	adc	r26, r1
 830:	68 0f       	add	r22, r24
 832:	79 1f       	adc	r23, r25
 834:	8a 1f       	adc	r24, r26
 836:	91 1d       	adc	r25, r1
 838:	a1 1d       	adc	r26, r1
 83a:	6a 0f       	add	r22, r26
 83c:	71 1d       	adc	r23, r1
 83e:	81 1d       	adc	r24, r1
 840:	91 1d       	adc	r25, r1
 842:	a1 1d       	adc	r26, r1
 844:	20 d0       	rcall	.+64     	; 0x886 <__ultoa_invert+0x84>
 846:	09 f4       	brne	.+2      	; 0x84a <__ultoa_invert+0x48>
 848:	68 94       	set
 84a:	3f 91       	pop	r19
 84c:	2a e0       	ldi	r18, 0x0A	; 10
 84e:	26 9f       	mul	r18, r22
 850:	11 24       	eor	r1, r1
 852:	30 19       	sub	r19, r0
 854:	30 5d       	subi	r19, 0xD0	; 208
 856:	31 93       	st	Z+, r19
 858:	de f6       	brtc	.-74     	; 0x810 <__ultoa_invert+0xe>
 85a:	cf 01       	movw	r24, r30
 85c:	08 95       	ret
 85e:	46 2f       	mov	r20, r22
 860:	47 70       	andi	r20, 0x07	; 7
 862:	40 5d       	subi	r20, 0xD0	; 208
 864:	41 93       	st	Z+, r20
 866:	b3 e0       	ldi	r27, 0x03	; 3
 868:	0f d0       	rcall	.+30     	; 0x888 <__ultoa_invert+0x86>
 86a:	c9 f7       	brne	.-14     	; 0x85e <__ultoa_invert+0x5c>
 86c:	f6 cf       	rjmp	.-20     	; 0x85a <__ultoa_invert+0x58>
 86e:	46 2f       	mov	r20, r22
 870:	4f 70       	andi	r20, 0x0F	; 15
 872:	40 5d       	subi	r20, 0xD0	; 208
 874:	4a 33       	cpi	r20, 0x3A	; 58
 876:	18 f0       	brcs	.+6      	; 0x87e <__ultoa_invert+0x7c>
 878:	49 5d       	subi	r20, 0xD9	; 217
 87a:	31 fd       	sbrc	r19, 1
 87c:	40 52       	subi	r20, 0x20	; 32
 87e:	41 93       	st	Z+, r20
 880:	02 d0       	rcall	.+4      	; 0x886 <__ultoa_invert+0x84>
 882:	a9 f7       	brne	.-22     	; 0x86e <__ultoa_invert+0x6c>
 884:	ea cf       	rjmp	.-44     	; 0x85a <__ultoa_invert+0x58>
 886:	b4 e0       	ldi	r27, 0x04	; 4
 888:	a6 95       	lsr	r26
 88a:	97 95       	ror	r25
 88c:	87 95       	ror	r24
 88e:	77 95       	ror	r23
 890:	67 95       	ror	r22
 892:	ba 95       	dec	r27
 894:	c9 f7       	brne	.-14     	; 0x888 <__ultoa_invert+0x86>
 896:	00 97       	sbiw	r24, 0x00	; 0
 898:	61 05       	cpc	r22, r1
 89a:	71 05       	cpc	r23, r1
 89c:	08 95       	ret
 89e:	9b 01       	movw	r18, r22
 8a0:	ac 01       	movw	r20, r24
 8a2:	0a 2e       	mov	r0, r26
 8a4:	06 94       	lsr	r0
 8a6:	57 95       	ror	r21
 8a8:	47 95       	ror	r20
 8aa:	37 95       	ror	r19
 8ac:	27 95       	ror	r18
 8ae:	ba 95       	dec	r27
 8b0:	c9 f7       	brne	.-14     	; 0x8a4 <__ultoa_invert+0xa2>
 8b2:	62 0f       	add	r22, r18
 8b4:	73 1f       	adc	r23, r19
 8b6:	84 1f       	adc	r24, r20
 8b8:	95 1f       	adc	r25, r21
 8ba:	a0 1d       	adc	r26, r0
 8bc:	08 95       	ret

000008be <__prologue_saves__>:
 8be:	2f 92       	push	r2
 8c0:	3f 92       	push	r3
 8c2:	4f 92       	push	r4
 8c4:	5f 92       	push	r5
 8c6:	6f 92       	push	r6
 8c8:	7f 92       	push	r7
 8ca:	8f 92       	push	r8
 8cc:	9f 92       	push	r9
 8ce:	af 92       	push	r10
 8d0:	bf 92       	push	r11
 8d2:	cf 92       	push	r12
 8d4:	df 92       	push	r13
 8d6:	ef 92       	push	r14
 8d8:	ff 92       	push	r15
 8da:	0f 93       	push	r16
 8dc:	1f 93       	push	r17
 8de:	cf 93       	push	r28
 8e0:	df 93       	push	r29
 8e2:	cd b7       	in	r28, 0x3d	; 61
 8e4:	de b7       	in	r29, 0x3e	; 62
 8e6:	ca 1b       	sub	r28, r26
 8e8:	db 0b       	sbc	r29, r27
 8ea:	0f b6       	in	r0, 0x3f	; 63
 8ec:	f8 94       	cli
 8ee:	de bf       	out	0x3e, r29	; 62
 8f0:	0f be       	out	0x3f, r0	; 63
 8f2:	cd bf       	out	0x3d, r28	; 61
 8f4:	09 94       	ijmp

000008f6 <__epilogue_restores__>:
 8f6:	2a 88       	ldd	r2, Y+18	; 0x12
 8f8:	39 88       	ldd	r3, Y+17	; 0x11
 8fa:	48 88       	ldd	r4, Y+16	; 0x10
 8fc:	5f 84       	ldd	r5, Y+15	; 0x0f
 8fe:	6e 84       	ldd	r6, Y+14	; 0x0e
 900:	7d 84       	ldd	r7, Y+13	; 0x0d
 902:	8c 84       	ldd	r8, Y+12	; 0x0c
 904:	9b 84       	ldd	r9, Y+11	; 0x0b
 906:	aa 84       	ldd	r10, Y+10	; 0x0a
 908:	b9 84       	ldd	r11, Y+9	; 0x09
 90a:	c8 84       	ldd	r12, Y+8	; 0x08
 90c:	df 80       	ldd	r13, Y+7	; 0x07
 90e:	ee 80       	ldd	r14, Y+6	; 0x06
 910:	fd 80       	ldd	r15, Y+5	; 0x05
 912:	0c 81       	ldd	r16, Y+4	; 0x04
 914:	1b 81       	ldd	r17, Y+3	; 0x03
 916:	aa 81       	ldd	r26, Y+2	; 0x02
 918:	b9 81       	ldd	r27, Y+1	; 0x01
 91a:	ce 0f       	add	r28, r30
 91c:	d1 1d       	adc	r29, r1
 91e:	0f b6       	in	r0, 0x3f	; 63
 920:	f8 94       	cli
 922:	de bf       	out	0x3e, r29	; 62
 924:	0f be       	out	0x3f, r0	; 63
 926:	cd bf       	out	0x3d, r28	; 61
 928:	ed 01       	movw	r28, r26
 92a:	08 95       	ret

0000092c <_exit>:
 92c:	f8 94       	cli

0000092e <__stop_program>:
 92e:	ff cf       	rjmp	.-2      	; 0x92e <__stop_program>
